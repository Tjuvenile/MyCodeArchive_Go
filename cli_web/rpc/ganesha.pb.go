// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: protocol/ganesha.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// nfs性能请求，无参数
type GetNfsStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNfsStatsRequest) Reset() {
	*x = GetNfsStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNfsStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNfsStatsRequest) ProtoMessage() {}

func (x *GetNfsStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNfsStatsRequest.ProtoReflect.Descriptor instead.
func (*GetNfsStatsRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{0}
}

// nfs性能响应
type GetNfsStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         string               `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ErrDescription string               `protobuf:"bytes,2,opt,name=errDescription,proto3" json:"errDescription,omitempty"`
	Exports        []*NfsMetrics        `protobuf:"bytes,3,rep,name=exports,proto3" json:"exports,omitempty"`
	Clients        []*NfsMetrics        `protobuf:"bytes,4,rep,name=clients,proto3" json:"clients,omitempty"`
	MetaTotal      *NfsMetaTotalMetrics `protobuf:"bytes,5,opt,name=meta_total,json=metaTotal,proto3" json:"meta_total,omitempty"`
}

func (x *GetNfsStatsResponse) Reset() {
	*x = GetNfsStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNfsStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNfsStatsResponse) ProtoMessage() {}

func (x *GetNfsStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNfsStatsResponse.ProtoReflect.Descriptor instead.
func (*GetNfsStatsResponse) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{1}
}

func (x *GetNfsStatsResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *GetNfsStatsResponse) GetErrDescription() string {
	if x != nil {
		return x.ErrDescription
	}
	return ""
}

func (x *GetNfsStatsResponse) GetExports() []*NfsMetrics {
	if x != nil {
		return x.Exports
	}
	return nil
}

func (x *GetNfsStatsResponse) GetClients() []*NfsMetrics {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *GetNfsStatsResponse) GetMetaTotal() *NfsMetaTotalMetrics {
	if x != nil {
		return x.MetaTotal
	}
	return nil
}

type NfsMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WriteOps     uint64  `protobuf:"varint,2,opt,name=write_ops,json=writeOps,proto3" json:"write_ops,omitempty"`
	ReadOps      uint64  `protobuf:"varint,3,opt,name=read_ops,json=readOps,proto3" json:"read_ops,omitempty"`
	OtherOps     uint64  `protobuf:"varint,4,opt,name=other_ops,json=otherOps,proto3" json:"other_ops,omitempty"`
	WriteBw      uint64  `protobuf:"varint,5,opt,name=write_bw,json=writeBw,proto3" json:"write_bw,omitempty"`
	ReadBw       uint64  `protobuf:"varint,6,opt,name=read_bw,json=readBw,proto3" json:"read_bw,omitempty"`
	ReadLatency  float64 `protobuf:"fixed64,7,opt,name=read_latency,json=readLatency,proto3" json:"read_latency,omitempty"`
	WriteLatency float64 `protobuf:"fixed64,8,opt,name=write_latency,json=writeLatency,proto3" json:"write_latency,omitempty"`
}

func (x *NfsMetrics) Reset() {
	*x = NfsMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NfsMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NfsMetrics) ProtoMessage() {}

func (x *NfsMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NfsMetrics.ProtoReflect.Descriptor instead.
func (*NfsMetrics) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{2}
}

func (x *NfsMetrics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NfsMetrics) GetWriteOps() uint64 {
	if x != nil {
		return x.WriteOps
	}
	return 0
}

func (x *NfsMetrics) GetReadOps() uint64 {
	if x != nil {
		return x.ReadOps
	}
	return 0
}

func (x *NfsMetrics) GetOtherOps() uint64 {
	if x != nil {
		return x.OtherOps
	}
	return 0
}

func (x *NfsMetrics) GetWriteBw() uint64 {
	if x != nil {
		return x.WriteBw
	}
	return 0
}

func (x *NfsMetrics) GetReadBw() uint64 {
	if x != nil {
		return x.ReadBw
	}
	return 0
}

func (x *NfsMetrics) GetReadLatency() float64 {
	if x != nil {
		return x.ReadLatency
	}
	return 0
}

func (x *NfsMetrics) GetWriteLatency() float64 {
	if x != nil {
		return x.WriteLatency
	}
	return 0
}

type NfsMetaTotalMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Getattr uint64 `protobuf:"varint,1,opt,name=getattr,proto3" json:"getattr,omitempty"`
	Setattr uint64 `protobuf:"varint,2,opt,name=setattr,proto3" json:"setattr,omitempty"`
	Lookup  uint64 `protobuf:"varint,3,opt,name=lookup,proto3" json:"lookup,omitempty"`
	Access  uint64 `protobuf:"varint,4,opt,name=access,proto3" json:"access,omitempty"`
	Write   uint64 `protobuf:"varint,5,opt,name=write,proto3" json:"write,omitempty"`
	Create  uint64 `protobuf:"varint,6,opt,name=create,proto3" json:"create,omitempty"`
	Mkdir   uint64 `protobuf:"varint,7,opt,name=mkdir,proto3" json:"mkdir,omitempty"`
	Remove  uint64 `protobuf:"varint,8,opt,name=remove,proto3" json:"remove,omitempty"`
	Rmdir   uint64 `protobuf:"varint,9,opt,name=rmdir,proto3" json:"rmdir,omitempty"`
	Fstat   uint64 `protobuf:"varint,10,opt,name=fstat,proto3" json:"fstat,omitempty"`
}

func (x *NfsMetaTotalMetrics) Reset() {
	*x = NfsMetaTotalMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NfsMetaTotalMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NfsMetaTotalMetrics) ProtoMessage() {}

func (x *NfsMetaTotalMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NfsMetaTotalMetrics.ProtoReflect.Descriptor instead.
func (*NfsMetaTotalMetrics) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{3}
}

func (x *NfsMetaTotalMetrics) GetGetattr() uint64 {
	if x != nil {
		return x.Getattr
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetSetattr() uint64 {
	if x != nil {
		return x.Setattr
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetLookup() uint64 {
	if x != nil {
		return x.Lookup
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetAccess() uint64 {
	if x != nil {
		return x.Access
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetWrite() uint64 {
	if x != nil {
		return x.Write
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetCreate() uint64 {
	if x != nil {
		return x.Create
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetMkdir() uint64 {
	if x != nil {
		return x.Mkdir
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetRemove() uint64 {
	if x != nil {
		return x.Remove
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetRmdir() uint64 {
	if x != nil {
		return x.Rmdir
	}
	return 0
}

func (x *NfsMetaTotalMetrics) GetFstat() uint64 {
	if x != nil {
		return x.Fstat
	}
	return 0
}

type ReadLocalConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadLocalConfigRequest) Reset() {
	*x = ReadLocalConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadLocalConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadLocalConfigRequest) ProtoMessage() {}

func (x *ReadLocalConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadLocalConfigRequest.ProtoReflect.Descriptor instead.
func (*ReadLocalConfigRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{4}
}

type ReadLocalConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data           string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Result         string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	ErrDescription string `protobuf:"bytes,3,opt,name=errDescription,proto3" json:"errDescription,omitempty"`
}

func (x *ReadLocalConfigRes) Reset() {
	*x = ReadLocalConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadLocalConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadLocalConfigRes) ProtoMessage() {}

func (x *ReadLocalConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadLocalConfigRes.ProtoReflect.Descriptor instead.
func (*ReadLocalConfigRes) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{5}
}

func (x *ReadLocalConfigRes) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ReadLocalConfigRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ReadLocalConfigRes) GetErrDescription() string {
	if x != nil {
		return x.ErrDescription
	}
	return ""
}

type SaveConfigToLocalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaveConfigToLocalRequest) Reset() {
	*x = SaveConfigToLocalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveConfigToLocalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveConfigToLocalRequest) ProtoMessage() {}

func (x *SaveConfigToLocalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveConfigToLocalRequest.ProtoReflect.Descriptor instead.
func (*SaveConfigToLocalRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{6}
}

func (x *SaveConfigToLocalRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AddExportConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	ExportID   string `protobuf:"bytes,2,opt,name=exportID,proto3" json:"exportID,omitempty"`
	Protocols  string `protobuf:"bytes,3,opt,name=protocols,proto3" json:"protocols,omitempty"`
	FsalName   string `protobuf:"bytes,4,opt,name=fsalName,proto3" json:"fsalName,omitempty"`
	Filesystem string `protobuf:"bytes,5,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	Pseudo     string `protobuf:"bytes,6,opt,name=pseudo,proto3" json:"pseudo,omitempty"`
}

func (x *AddExportConfRequest) Reset() {
	*x = AddExportConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExportConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExportConfRequest) ProtoMessage() {}

func (x *AddExportConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExportConfRequest.ProtoReflect.Descriptor instead.
func (*AddExportConfRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{7}
}

func (x *AddExportConfRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddExportConfRequest) GetExportID() string {
	if x != nil {
		return x.ExportID
	}
	return ""
}

func (x *AddExportConfRequest) GetProtocols() string {
	if x != nil {
		return x.Protocols
	}
	return ""
}

func (x *AddExportConfRequest) GetFsalName() string {
	if x != nil {
		return x.FsalName
	}
	return ""
}

func (x *AddExportConfRequest) GetFilesystem() string {
	if x != nil {
		return x.Filesystem
	}
	return ""
}

func (x *AddExportConfRequest) GetPseudo() string {
	if x != nil {
		return x.Pseudo
	}
	return ""
}

type AddCeafsConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagerPool   string `protobuf:"bytes,1,opt,name=managerPool,proto3" json:"managerPool,omitempty"`
	ManagerCont   string `protobuf:"bytes,2,opt,name=managerCont,proto3" json:"managerCont,omitempty"`
	InterfaceName string `protobuf:"bytes,3,opt,name=interfaceName,proto3" json:"interfaceName,omitempty"`
	Ip            string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          string `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *AddCeafsConfRequest) Reset() {
	*x = AddCeafsConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCeafsConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCeafsConfRequest) ProtoMessage() {}

func (x *AddCeafsConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCeafsConfRequest.ProtoReflect.Descriptor instead.
func (*AddCeafsConfRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{8}
}

func (x *AddCeafsConfRequest) GetManagerPool() string {
	if x != nil {
		return x.ManagerPool
	}
	return ""
}

func (x *AddCeafsConfRequest) GetManagerCont() string {
	if x != nil {
		return x.ManagerCont
	}
	return ""
}

func (x *AddCeafsConfRequest) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *AddCeafsConfRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddCeafsConfRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type RemoveCeafsConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCeafsConfRequest) Reset() {
	*x = RemoveCeafsConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCeafsConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCeafsConfRequest) ProtoMessage() {}

func (x *RemoveCeafsConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCeafsConfRequest.ProtoReflect.Descriptor instead.
func (*RemoveCeafsConfRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{9}
}

type ExportIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportID string `protobuf:"bytes,2,opt,name=exportID,proto3" json:"exportID,omitempty"`
}

func (x *ExportIDRequest) Reset() {
	*x = ExportIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportIDRequest) ProtoMessage() {}

func (x *ExportIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportIDRequest.ProtoReflect.Descriptor instead.
func (*ExportIDRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{10}
}

func (x *ExportIDRequest) GetExportID() string {
	if x != nil {
		return x.ExportID
	}
	return ""
}

type RemoveExportConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportID string `protobuf:"bytes,1,opt,name=exportID,proto3" json:"exportID,omitempty"`
}

func (x *RemoveExportConfRequest) Reset() {
	*x = RemoveExportConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveExportConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveExportConfRequest) ProtoMessage() {}

func (x *RemoveExportConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveExportConfRequest.ProtoReflect.Descriptor instead.
func (*RemoveExportConfRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveExportConfRequest) GetExportID() string {
	if x != nil {
		return x.ExportID
	}
	return ""
}

type AddPoliciesConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportID string    `protobuf:"bytes,1,opt,name=exportID,proto3" json:"exportID,omitempty"`
	Policies []*Policy `protobuf:"bytes,2,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *AddPoliciesConfRequest) Reset() {
	*x = AddPoliciesConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPoliciesConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPoliciesConfRequest) ProtoMessage() {}

func (x *AddPoliciesConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPoliciesConfRequest.ProtoReflect.Descriptor instead.
func (*AddPoliciesConfRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{12}
}

func (x *AddPoliciesConfRequest) GetExportID() string {
	if x != nil {
		return x.ExportID
	}
	return ""
}

func (x *AddPoliciesConfRequest) GetPolicies() []*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyIP   string `protobuf:"bytes,2,opt,name=policyIP,proto3" json:"policyIP,omitempty"`
	AccessType string `protobuf:"bytes,3,opt,name=accessType,proto3" json:"accessType,omitempty"`
	Squash     string `protobuf:"bytes,5,opt,name=squash,proto3" json:"squash,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{13}
}

func (x *Policy) GetPolicyIP() string {
	if x != nil {
		return x.PolicyIP
	}
	return ""
}

func (x *Policy) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *Policy) GetSquash() string {
	if x != nil {
		return x.Squash
	}
	return ""
}

type RemovePolicyConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportID string `protobuf:"bytes,1,opt,name=exportID,proto3" json:"exportID,omitempty"`
	PolicyIP string `protobuf:"bytes,2,opt,name=policyIP,proto3" json:"policyIP,omitempty"`
}

func (x *RemovePolicyConfRequest) Reset() {
	*x = RemovePolicyConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePolicyConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePolicyConfRequest) ProtoMessage() {}

func (x *RemovePolicyConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePolicyConfRequest.ProtoReflect.Descriptor instead.
func (*RemovePolicyConfRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{14}
}

func (x *RemovePolicyConfRequest) GetExportID() string {
	if x != nil {
		return x.ExportID
	}
	return ""
}

func (x *RemovePolicyConfRequest) GetPolicyIP() string {
	if x != nil {
		return x.PolicyIP
	}
	return ""
}

type UpdatePolicyConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportID   string `protobuf:"bytes,1,opt,name=exportID,proto3" json:"exportID,omitempty"`
	PolicyIP   string `protobuf:"bytes,2,opt,name=policyIP,proto3" json:"policyIP,omitempty"`
	AccessType string `protobuf:"bytes,3,opt,name=accessType,proto3" json:"accessType,omitempty"`
	Squash     string `protobuf:"bytes,5,opt,name=squash,proto3" json:"squash,omitempty"`
}

func (x *UpdatePolicyConfRequest) Reset() {
	*x = UpdatePolicyConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePolicyConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyConfRequest) ProtoMessage() {}

func (x *UpdatePolicyConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyConfRequest.ProtoReflect.Descriptor instead.
func (*UpdatePolicyConfRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{15}
}

func (x *UpdatePolicyConfRequest) GetExportID() string {
	if x != nil {
		return x.ExportID
	}
	return ""
}

func (x *UpdatePolicyConfRequest) GetPolicyIP() string {
	if x != nil {
		return x.PolicyIP
	}
	return ""
}

func (x *UpdatePolicyConfRequest) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *UpdatePolicyConfRequest) GetSquash() string {
	if x != nil {
		return x.Squash
	}
	return ""
}

type UpdateExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Protocols  string `protobuf:"bytes,2,opt,name=protocols,proto3" json:"protocols,omitempty"`
	AccessType string `protobuf:"bytes,3,opt,name=accessType,proto3" json:"accessType,omitempty"`
	FsalName   string `protobuf:"bytes,4,opt,name=fsalName,proto3" json:"fsalName,omitempty"`
	Rootfs     string `protobuf:"bytes,5,opt,name=rootfs,proto3" json:"rootfs,omitempty"`
}

func (x *UpdateExportRequest) Reset() {
	*x = UpdateExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExportRequest) ProtoMessage() {}

func (x *UpdateExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExportRequest.ProtoReflect.Descriptor instead.
func (*UpdateExportRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateExportRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateExportRequest) GetProtocols() string {
	if x != nil {
		return x.Protocols
	}
	return ""
}

func (x *UpdateExportRequest) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *UpdateExportRequest) GetFsalName() string {
	if x != nil {
		return x.FsalName
	}
	return ""
}

func (x *UpdateExportRequest) GetRootfs() string {
	if x != nil {
		return x.Rootfs
	}
	return ""
}

type ShowExportsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowExportsRequest) Reset() {
	*x = ShowExportsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowExportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowExportsRequest) ProtoMessage() {}

func (x *ShowExportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowExportsRequest.ProtoReflect.Descriptor instead.
func (*ShowExportsRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{17}
}

type ShowExportsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         string        `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ErrDescription string        `protobuf:"bytes,2,opt,name=errDescription,proto3" json:"errDescription,omitempty"`
	FsalName       string        `protobuf:"bytes,3,opt,name=fsalName,proto3" json:"fsalName,omitempty"`
	Total          string        `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Path           string        `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Pages          []*ExportInfo `protobuf:"bytes,6,rep,name=pages,proto3" json:"pages,omitempty"`
}

func (x *ShowExportsReply) Reset() {
	*x = ShowExportsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowExportsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowExportsReply) ProtoMessage() {}

func (x *ShowExportsReply) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowExportsReply.ProtoReflect.Descriptor instead.
func (*ShowExportsReply) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{18}
}

func (x *ShowExportsReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ShowExportsReply) GetErrDescription() string {
	if x != nil {
		return x.ErrDescription
	}
	return ""
}

func (x *ShowExportsReply) GetFsalName() string {
	if x != nil {
		return x.FsalName
	}
	return ""
}

func (x *ShowExportsReply) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *ShowExportsReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ShowExportsReply) GetPages() []*ExportInfo {
	if x != nil {
		return x.Pages
	}
	return nil
}

type ExportInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportID   string `protobuf:"bytes,1,opt,name=exportID,proto3" json:"exportID,omitempty"`
	PolicyIP   string `protobuf:"bytes,2,opt,name=policyIP,proto3" json:"policyIP,omitempty"`
	AccessType string `protobuf:"bytes,3,opt,name=accessType,proto3" json:"accessType,omitempty"`
	Protocols  string `protobuf:"bytes,4,opt,name=protocols,proto3" json:"protocols,omitempty"`
}

func (x *ExportInfo) Reset() {
	*x = ExportInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportInfo) ProtoMessage() {}

func (x *ExportInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportInfo.ProtoReflect.Descriptor instead.
func (*ExportInfo) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{19}
}

func (x *ExportInfo) GetExportID() string {
	if x != nil {
		return x.ExportID
	}
	return ""
}

func (x *ExportInfo) GetPolicyIP() string {
	if x != nil {
		return x.PolicyIP
	}
	return ""
}

func (x *ExportInfo) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *ExportInfo) GetProtocols() string {
	if x != nil {
		return x.Protocols
	}
	return ""
}

type ShowExportsAccessTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowExportsAccessTypeRequest) Reset() {
	*x = ShowExportsAccessTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowExportsAccessTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowExportsAccessTypeRequest) ProtoMessage() {}

func (x *ShowExportsAccessTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowExportsAccessTypeRequest.ProtoReflect.Descriptor instead.
func (*ShowExportsAccessTypeRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{20}
}

type ShowExportsAccessTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         string        `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ErrDescription string        `protobuf:"bytes,2,opt,name=errDescription,proto3" json:"errDescription,omitempty"`
	FsalName       string        `protobuf:"bytes,3,opt,name=fsalName,proto3" json:"fsalName,omitempty"`
	Total          string        `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
	Pages          []*PolicyInfo `protobuf:"bytes,5,rep,name=pages,proto3" json:"pages,omitempty"`
	AccessType     string        `protobuf:"bytes,6,opt,name=accessType,proto3" json:"accessType,omitempty"`
}

func (x *ShowExportsAccessTypeReply) Reset() {
	*x = ShowExportsAccessTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowExportsAccessTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowExportsAccessTypeReply) ProtoMessage() {}

func (x *ShowExportsAccessTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowExportsAccessTypeReply.ProtoReflect.Descriptor instead.
func (*ShowExportsAccessTypeReply) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{21}
}

func (x *ShowExportsAccessTypeReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ShowExportsAccessTypeReply) GetErrDescription() string {
	if x != nil {
		return x.ErrDescription
	}
	return ""
}

func (x *ShowExportsAccessTypeReply) GetFsalName() string {
	if x != nil {
		return x.FsalName
	}
	return ""
}

func (x *ShowExportsAccessTypeReply) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *ShowExportsAccessTypeReply) GetPages() []*PolicyInfo {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *ShowExportsAccessTypeReply) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

type PolicyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyIP   string `protobuf:"bytes,1,opt,name=policyIP,proto3" json:"policyIP,omitempty"`
	AccessType string `protobuf:"bytes,2,opt,name=AccessType,proto3" json:"AccessType,omitempty"`
}

func (x *PolicyInfo) Reset() {
	*x = PolicyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyInfo) ProtoMessage() {}

func (x *PolicyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyInfo.ProtoReflect.Descriptor instead.
func (*PolicyInfo) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{22}
}

func (x *PolicyInfo) GetPolicyIP() string {
	if x != nil {
		return x.PolicyIP
	}
	return ""
}

func (x *PolicyInfo) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

type DisplayExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportID string `protobuf:"bytes,1,opt,name=exportID,proto3" json:"exportID,omitempty"`
}

func (x *DisplayExportRequest) Reset() {
	*x = DisplayExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayExportRequest) ProtoMessage() {}

func (x *DisplayExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayExportRequest.ProtoReflect.Descriptor instead.
func (*DisplayExportRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{23}
}

func (x *DisplayExportRequest) GetExportID() string {
	if x != nil {
		return x.ExportID
	}
	return ""
}

type DisplayExportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ErrDescription string `protobuf:"bytes,2,opt,name=errDescription,proto3" json:"errDescription,omitempty"`
	FsalName       string `protobuf:"bytes,3,opt,name=fsalName,proto3" json:"fsalName,omitempty"`
	Rootfs         string `protobuf:"bytes,4,opt,name=rootfs,proto3" json:"rootfs,omitempty"`
	Path           string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *DisplayExportReply) Reset() {
	*x = DisplayExportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayExportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayExportReply) ProtoMessage() {}

func (x *DisplayExportReply) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayExportReply.ProtoReflect.Descriptor instead.
func (*DisplayExportReply) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{24}
}

func (x *DisplayExportReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *DisplayExportReply) GetErrDescription() string {
	if x != nil {
		return x.ErrDescription
	}
	return ""
}

func (x *DisplayExportReply) GetFsalName() string {
	if x != nil {
		return x.FsalName
	}
	return ""
}

func (x *DisplayExportReply) GetRootfs() string {
	if x != nil {
		return x.Rootfs
	}
	return ""
}

func (x *DisplayExportReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type BaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ErrDescription string `protobuf:"bytes,2,opt,name=errDescription,proto3" json:"errDescription,omitempty"`
}

func (x *BaseReply) Reset() {
	*x = BaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseReply) ProtoMessage() {}

func (x *BaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseReply.ProtoReflect.Descriptor instead.
func (*BaseReply) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{25}
}

func (x *BaseReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *BaseReply) GetErrDescription() string {
	if x != nil {
		return x.ErrDescription
	}
	return ""
}

type RemoveLocalConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveLocalConfRequest) Reset() {
	*x = RemoveLocalConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLocalConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLocalConfRequest) ProtoMessage() {}

func (x *RemoveLocalConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLocalConfRequest.ProtoReflect.Descriptor instead.
func (*RemoveLocalConfRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{26}
}

type RemoveLocalConfRollbakRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveLocalConfRollbakRequest) Reset() {
	*x = RemoveLocalConfRollbakRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_ganesha_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLocalConfRollbakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLocalConfRollbakRequest) ProtoMessage() {}

func (x *RemoveLocalConfRollbakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_ganesha_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLocalConfRollbakRequest.ProtoReflect.Descriptor instead.
func (*RemoveLocalConfRollbakRequest) Descriptor() ([]byte, []int) {
	return file_protocol_ganesha_proto_rawDescGZIP(), []int{27}
}

var File_protocol_ganesha_proto protoreflect.FileDescriptor

var file_protocol_ganesha_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x6e, 0x65, 0x73,
	0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x6d, 0x67, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4e, 0x66, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x66, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x72, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x72, 0x72,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x6d, 0x67, 0x2e, 0x6e, 0x66, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x6e, 0x66,
	0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x6e, 0x66, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x09, 0x6d, 0x65, 0x74, 0x61, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf1, 0x01, 0x0a, 0x0a, 0x6e,
	0x66, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x6f, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65,
	0x61, 0x64, 0x4f, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6f,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f,
	0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x42, 0x77, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x64, 0x42, 0x77, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x72, 0x65,
	0x61, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x81,
	0x02, 0x0a, 0x13, 0x6e, 0x66, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x61, 0x74, 0x74,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x73, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6b, 0x64, 0x69,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x6b, 0x64, 0x69, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6d, 0x64, 0x69, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6d, 0x64, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x73, 0x74, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x73, 0x74,
	0x61, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x12,
	0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x65, 0x72, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x72, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x18, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x73, 0x65,
	0x75, 0x64, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x73, 0x65, 0x75, 0x64,
	0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x43, 0x65, 0x61, 0x66, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x65, 0x61, 0x66, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x2d, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44,
	0x22, 0x35, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12, 0x27, 0x0a,
	0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x71, 0x75, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x71,
	0x75, 0x61, 0x73, 0x68, 0x22, 0x51, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x71, 0x75, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x71, 0x75,
	0x61, 0x73, 0x68, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x74, 0x66, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66,
	0x73, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x77,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x72, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x72,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x22, 0x1e,
	0x0a, 0x1c, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd5,
	0x01, 0x0a, 0x1a, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x72, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x72, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x25, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x50,
	0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x32, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x44, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x72, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x72, 0x72,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x73, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0x4b, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x72, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x72, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0xe8, 0x07, 0x0a, 0x07,
	0x47, 0x61, 0x6e, 0x65, 0x73, 0x68, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x65,
	0x61, 0x66, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x18, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x65, 0x61, 0x66, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x65, 0x61,
	0x66, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1b, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x65, 0x61, 0x66, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x67, 0x72, 0x12, 0x14, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d,
	0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x67, 0x72,
	0x12, 0x14, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x19, 0x2e, 0x70, 0x6d, 0x67, 0x2e,
	0x41, 0x64, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1c, 0x2e, 0x70, 0x6d, 0x67,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x67, 0x72, 0x12, 0x14, 0x2e,
	0x70, 0x6d, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1b, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x41,
	0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1c, 0x2e, 0x70, 0x6d,
	0x67, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x12,
	0x1c, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x11, 0x53, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12,
	0x1d, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e,
	0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x28, 0x01,
	0x12, 0x40, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x12, 0x1b, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x6b, 0x12, 0x22, 0x2e, 0x70,
	0x6d, 0x67, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0e, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x66, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x17, 0x2e, 0x70, 0x6d, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x66, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6d, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x66, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x6e, 0x66, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_ganesha_proto_rawDescOnce sync.Once
	file_protocol_ganesha_proto_rawDescData = file_protocol_ganesha_proto_rawDesc
)

func file_protocol_ganesha_proto_rawDescGZIP() []byte {
	file_protocol_ganesha_proto_rawDescOnce.Do(func() {
		file_protocol_ganesha_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_ganesha_proto_rawDescData)
	})
	return file_protocol_ganesha_proto_rawDescData
}

var file_protocol_ganesha_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_protocol_ganesha_proto_goTypes = []interface{}{
	(*GetNfsStatsRequest)(nil),            // 0: pmg.GetNfsStatsRequest
	(*GetNfsStatsResponse)(nil),           // 1: pmg.GetNfsStatsResponse
	(*NfsMetrics)(nil),                    // 2: pmg.nfsMetrics
	(*NfsMetaTotalMetrics)(nil),           // 3: pmg.nfsMetaTotalMetrics
	(*ReadLocalConfigRequest)(nil),        // 4: pmg.ReadLocalConfigRequest
	(*ReadLocalConfigRes)(nil),            // 5: pmg.ReadLocalConfigRes
	(*SaveConfigToLocalRequest)(nil),      // 6: pmg.SaveConfigToLocalRequest
	(*AddExportConfRequest)(nil),          // 7: pmg.AddExportConfRequest
	(*AddCeafsConfRequest)(nil),           // 8: pmg.AddCeafsConfRequest
	(*RemoveCeafsConfRequest)(nil),        // 9: pmg.RemoveCeafsConfRequest
	(*ExportIDRequest)(nil),               // 10: pmg.ExportIDRequest
	(*RemoveExportConfRequest)(nil),       // 11: pmg.RemoveExportConfRequest
	(*AddPoliciesConfRequest)(nil),        // 12: pmg.AddPoliciesConfRequest
	(*Policy)(nil),                        // 13: pmg.Policy
	(*RemovePolicyConfRequest)(nil),       // 14: pmg.RemovePolicyConfRequest
	(*UpdatePolicyConfRequest)(nil),       // 15: pmg.UpdatePolicyConfRequest
	(*UpdateExportRequest)(nil),           // 16: pmg.UpdateExportRequest
	(*ShowExportsRequest)(nil),            // 17: pmg.ShowExportsRequest
	(*ShowExportsReply)(nil),              // 18: pmg.ShowExportsReply
	(*ExportInfo)(nil),                    // 19: pmg.ExportInfo
	(*ShowExportsAccessTypeRequest)(nil),  // 20: pmg.ShowExportsAccessTypeRequest
	(*ShowExportsAccessTypeReply)(nil),    // 21: pmg.ShowExportsAccessTypeReply
	(*PolicyInfo)(nil),                    // 22: pmg.PolicyInfo
	(*DisplayExportRequest)(nil),          // 23: pmg.DisplayExportRequest
	(*DisplayExportReply)(nil),            // 24: pmg.DisplayExportReply
	(*BaseReply)(nil),                     // 25: pmg.BaseReply
	(*RemoveLocalConfRequest)(nil),        // 26: pmg.RemoveLocalConfRequest
	(*RemoveLocalConfRollbakRequest)(nil), // 27: pmg.RemoveLocalConfRollbakRequest
}
var file_protocol_ganesha_proto_depIdxs = []int32{
	2,  // 0: pmg.GetNfsStatsResponse.exports:type_name -> pmg.nfsMetrics
	2,  // 1: pmg.GetNfsStatsResponse.clients:type_name -> pmg.nfsMetrics
	3,  // 2: pmg.GetNfsStatsResponse.meta_total:type_name -> pmg.nfsMetaTotalMetrics
	13, // 3: pmg.AddPoliciesConfRequest.policies:type_name -> pmg.Policy
	19, // 4: pmg.ShowExportsReply.pages:type_name -> pmg.ExportInfo
	22, // 5: pmg.ShowExportsAccessTypeReply.pages:type_name -> pmg.PolicyInfo
	8,  // 6: pmg.Ganesha.AddCeafsConf:input_type -> pmg.AddCeafsConfRequest
	9,  // 7: pmg.Ganesha.RemoveCeafsConf:input_type -> pmg.RemoveCeafsConfRequest
	10, // 8: pmg.Ganesha.SetExportMgr:input_type -> pmg.ExportIDRequest
	10, // 9: pmg.Ganesha.UpdateExportMgr:input_type -> pmg.ExportIDRequest
	7,  // 10: pmg.Ganesha.AddExportConf:input_type -> pmg.AddExportConfRequest
	11, // 11: pmg.Ganesha.RemoveExportConf:input_type -> pmg.RemoveExportConfRequest
	10, // 12: pmg.Ganesha.RemoveExportMgr:input_type -> pmg.ExportIDRequest
	12, // 13: pmg.Ganesha.AddPoliciesConf:input_type -> pmg.AddPoliciesConfRequest
	14, // 14: pmg.Ganesha.RemovePolicyConf:input_type -> pmg.RemovePolicyConfRequest
	15, // 15: pmg.Ganesha.UpdatePolicyConf:input_type -> pmg.UpdatePolicyConfRequest
	4,  // 16: pmg.Ganesha.ReadLocalConfig:input_type -> pmg.ReadLocalConfigRequest
	6,  // 17: pmg.Ganesha.SaveConfigToLocal:input_type -> pmg.SaveConfigToLocalRequest
	26, // 18: pmg.Ganesha.RemoveLocalConf:input_type -> pmg.RemoveLocalConfRequest
	27, // 19: pmg.Ganesha.RemoveLocalConfRollbak:input_type -> pmg.RemoveLocalConfRollbakRequest
	0,  // 20: pmg.Ganesha.GetNfsStats:input_type -> pmg.GetNfsStatsRequest
	25, // 21: pmg.Ganesha.AddCeafsConf:output_type -> pmg.BaseReply
	25, // 22: pmg.Ganesha.RemoveCeafsConf:output_type -> pmg.BaseReply
	25, // 23: pmg.Ganesha.SetExportMgr:output_type -> pmg.BaseReply
	25, // 24: pmg.Ganesha.UpdateExportMgr:output_type -> pmg.BaseReply
	25, // 25: pmg.Ganesha.AddExportConf:output_type -> pmg.BaseReply
	25, // 26: pmg.Ganesha.RemoveExportConf:output_type -> pmg.BaseReply
	25, // 27: pmg.Ganesha.RemoveExportMgr:output_type -> pmg.BaseReply
	25, // 28: pmg.Ganesha.AddPoliciesConf:output_type -> pmg.BaseReply
	25, // 29: pmg.Ganesha.RemovePolicyConf:output_type -> pmg.BaseReply
	25, // 30: pmg.Ganesha.UpdatePolicyConf:output_type -> pmg.BaseReply
	5,  // 31: pmg.Ganesha.ReadLocalConfig:output_type -> pmg.ReadLocalConfigRes
	25, // 32: pmg.Ganesha.SaveConfigToLocal:output_type -> pmg.BaseReply
	25, // 33: pmg.Ganesha.RemoveLocalConf:output_type -> pmg.BaseReply
	25, // 34: pmg.Ganesha.RemoveLocalConfRollbak:output_type -> pmg.BaseReply
	1,  // 35: pmg.Ganesha.GetNfsStats:output_type -> pmg.GetNfsStatsResponse
	21, // [21:36] is the sub-list for method output_type
	6,  // [6:21] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_protocol_ganesha_proto_init() }
func file_protocol_ganesha_proto_init() {
	if File_protocol_ganesha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_ganesha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNfsStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNfsStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NfsMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NfsMetaTotalMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadLocalConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadLocalConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveConfigToLocalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddExportConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCeafsConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCeafsConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveExportConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPoliciesConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePolicyConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePolicyConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowExportsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowExportsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowExportsAccessTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowExportsAccessTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayExportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLocalConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_ganesha_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLocalConfRollbakRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_ganesha_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_ganesha_proto_goTypes,
		DependencyIndexes: file_protocol_ganesha_proto_depIdxs,
		MessageInfos:      file_protocol_ganesha_proto_msgTypes,
	}.Build()
	File_protocol_ganesha_proto = out.File
	file_protocol_ganesha_proto_rawDesc = nil
	file_protocol_ganesha_proto_goTypes = nil
	file_protocol_ganesha_proto_depIdxs = nil
}
